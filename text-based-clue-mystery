import random #choose truths, dice rolling
import time #delay function

board = [ [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], #starts with board[0][0] - [row][col]
        [0,22,22,22,22,22,0,9,9,0,1,1,1,1,0,9,9,0,2,2,2,2,2,0],
        [0,22,22,22,22,22,0,9,9,0,1,1,1,1,0,9,9,0,2,2,2,2,2,0],
        [0,0,0,0,0,22,0,9,9,0,1,1,1,1,0,9,9,0,2,2,2,2,2,0],
        [0,9,9,9,9,9,9,9,9,1,1,1,1,1,0,9,9,0,2,2,2,2,2,0],
        [0,9,9,9,9,9,9,9,9,0,1,1,1,1,0,9,9,0,2,0,0,0,0,0],
        [0,0,0,0,0,0,9,9,9,0,0,1,1,0,0,9,9,9,9,9,9,9,9,0],
        [0,8,8,8,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0],
        [0,8,8,8,8,8,8,9,9,0,0,0,0,0,9,9,9,9,9,9,9,9,9,0],
        [0,8,8,8,8,8,0,9,9,0,1,1,1,0,9,9,0,3,0,0,0,0,0,0],
        [0,0,0,8,0,0,9,9,9,0,1,1,1,0,9,9,0,3,3,3,3,3,3,0],
        [0,9,9,9,9,9,9,9,9,0,1,1,1,0,9,9,0,3,3,3,3,3,3,0],
        [0,7,0,0,0,0,9,9,9,0,1,1,1,0,9,9,3,3,3,3,3,3,3,0],
        [0,7,7,7,7,0,9,9,9,0,1,1,1,0,9,9,0,3,3,3,3,3,3,0],
        [0,7,7,7,7,0,9,9,9,0,0,0,0,0,9,9,0,0,0,3,3,3,3,0],
        [0,7,7,7,7,7,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0],
        [0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0],
        [0,9,9,9,9,9,9,9,0,5,0,0,0,0,5,0,9,9,9,9,9,9,9,0],
        [0,9,9,9,9,9,9,9,0,5,5,5,5,5,5,0,9,9,0,4,0,0,0,0],
        [0,0,0,0,6,0,9,9,5,5,5,5,5,5,5,5,9,9,0,4,4,4,4,0],
        [0,6,6,6,6,0,9,9,0,5,5,5,5,5,5,0,9,9,0,4,4,4,4,0],
        [0,6,6,6,6,0,9,9,0,0,5,5,5,5,0,0,9,9,0,4,4,4,4,0],
        [0,6,6,6,6,0,9,9,9,9,0,0,0,0,9,9,9,9,0,4,4,4,4,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] ]

#starting places
    #Miss Scarlet board[0][16]
    #Mrs. White board[23][14]
    #Mrs. Peacock board[18][0]
    #Professor plum board[5][0]
    #Mr. Green board[23][9]
    #Colonel Mustard board[7][23]

#room doors
    #study(22) board[3][5]
    #hall(1) board[4][9], board[6][11], board[6][12]
    #lounge(2) board[5][18]
    #dining room(3) board[9][17], board[12][16]
    #kitchen(4) board[18][18]
    #ballroom(5) board[17][9], board[17][14], board[19][8], board[19][15]
    #conservatory(6) board[19][4]
    #billiard room(7) board[15][5], board[12][1]
    #library(8) board[10][3], board[8][6]

#starting message
print("loading Clue: Text-Based Adventure ...")
time.sleep(4) # Sleep for 5 seconds
print("*murder mystery music plays*")
time.sleep(1)
print("The year is 1964. Dr. Black was murdered in his own home last night while some house guests were present.")
print("\tThere are no signs of a break-in. The only possible suspects are those who spent the night:")
print("\tMiss [S]carlet, Mrs. [W]hite, Mrs. [Pe]acock, Professor [Pl]um, Mr. [G]reen, and Colonel [M]ustard")

#randomly set location, weapon, killer in case file
num_k = random.randint(1, 6)
num_w = random.randint(1, 5)
num_r = random.randint(0, 8)
switcher_k={
    1:'Miss Scarlet',
    2:'Mrs Peacock',
    3:'Mrs White',
    4:'Prof Plum',
    5:'Col Mustard',
    6:'Mr Green'
}
killer = switcher_k.get(num_k,"error")

switcher_w={
    1:'Rope',
    2:'Wrench',
    3:'Candlestick',
    4:'Lead Pipe',
    5:'Knife'
}
weapon = switcher_w.get(num_w,"error")

if num_r == 0:
    room = 22
else:
    room = num_r

switcher_r={
    22:'study',
    1:'hall',
    2:'lounge',
    3:'dining room',
    4:'kitchen',
    5:'ballroom',
    6:'conservatory',
    7:'billiard room',
    8:'library'
}
room_name = switcher_r.get(room)

def guess_room(x):
    room_g = x
    weapon_g = input("-guess weapon-\n")
    killer_g = input("-guess killer-\n")
    count = 0
    a = 0
    b = 0
    d = 0
    c = ["","",""]

    if room_g == room_name:
        count += 1
        switcher0={
            22:'Study',
            1:'Hall',
            2:'Lounge',
            3:'Dining Room',
            4:'Kitchen',
            5:'Ballroom',
            6:'Conservatory',
            7:'Billiard Room',
            8:'Library'
        }
        c[0] = switcher0.get(room)
        a = 1
    if weapon_g == weapon:
        count += 1
        c[1] = weapon
        b = 1
    if killer_g == killer:
        count += 1
        c[2] = killer
        d = 1

    if count == 0:
        print("None are true")
    elif count == 1:
        print("you correctly guessed ", end ="")
        print(c[0], end ="")
        print(c[1], end ="")
        print(c[2], end ="")
    elif count == 2:
        # if room_g == room_name:
        #     print("you correctly guessed", c[0])
        # else:
        #     print("you correctly guessed", weapon)
        if a = b: #room & weapon are correct
            i = random.randint(0, 1)
            print("you correctly guessed", c[i])
        elif b = d: #weapon & killer are correct
            i = random.randint(1, 2)
            print("you correctly guessed", c[i])
        else: #room & killer are correct
            i = random.randint(0, 100)
            if i < 50:
                print("you correctly guessed", c[0])
            else
                print("you correctly guessed", c[3])

    else:
        i = random.randint(0, 2)
        print("you correctly guessed", c[i])

def guess_final():
    room_f = input("-identify the scene of the crime-\n")
    weapon_f = input("-identify the murder weapon-\n")
    killer_f = input("-identify the killer-\n")

    print("...")
    time.sleep(1)
    print("You exclaim: It was in the " +room_f+ ", with the " +weapon_f+ ", and " +killer_f+ " did it!")
    time.sleep(1)
    print("...")
    time.sleep(1)
    print("You read over the case files")
    time.sleep(1)
    print("...")
    time.sleep(1)
    print("It was in the " +room_name+ ", with the " +weapon+ ", and " +killer+ " did it!")
    time.sleep(2)

    if room_f == room_name and weapon_f == weapon and killer_f == killer:
        print("Congratulations, you cracked the case!")
        time.sleep(1)
        print("*murder mystery music plays over a montage of the night of the murder")
        time.sleep(3)
        print(killer+ " was tried and convicted for the brutal murder of Dr. Black.")
        time.sleep(3)
        print(killer+ " confessed that (s)he was a patient of the victim. Dr. Black had been blackmailing " +killer+ " with sensitive health records.")
        time.sleep(3)
    elif killer_f != killer:
        print(killer_f+ " was tried and wrongfully convicted for the brutal murder of Dr. Black.")
        time.sleep(3)
        print(killer_f+ " spent 2 years in prison before the necessary evidence surfaced to prove his/her innocence.")
        time.sleep(4)
        print("However, prosecutors lacked proper evidence to convict the true killer.")
        time.sleep(3)
        print(killer+ " got away with the murder and is now living out a life of luxury in the Bahamas with their inheritance.")
        print("It turns out " +killer+ " was Dr. Black's cousin, and his next of kin.")
        time.sleep(5)
    else:
        print(killer+ " was tried for the brutal murder of Dr. Black, but the evidence didn't hold up in court.")
        time.sleep(4)
        print(killer+ " got away with the murder and is now living out a life of luxury in the Bahamas with their inheritance.")
        print("It turns out " +killer+ " was Dr. Black's cousin, and his next of kin.")
        time.sleep(5)

    print("...")
    time.sleep(1)
    print("Thanks for playing!")

def enter_room(i): # i is [y, x, room]
    # welcome them to the room
    switcher={
        22:'Study',
        1:'Hall',
        2:'Lounge',
        3:'Dining Room',
        4:'Kitchen',
        5:'Ballroom',
        6:'Conservatory',
        7:'Billiard room',
        8:'Library'
    }
    j = i[2]
    z = switcher.get(j,"... ERROR")
    print("\nWelcome to the",z)

    on = 1
    while on == 1:
        #time to make a guess
        guess_room(i)

        #turn is over, what next?
        print("This turn is now over. Here are your options:")
        switcher2={
            22:'-[S]tay, [L]eave, Secret [T]unnel to kitchen-',
            1:'-[S]tay, [L]eave-',
            2:'-[S]tay, [L]eave, Secret [T]unnel to conservatory-',
            3:'-[S]tay, [L]eave-',
            4:'-[S]tay, [L]eave, Secret [T]unnel to study-',
            5:'-[S]tay, [L]eave-',
            6:'-[S]tay, [L]eave, Secret [T]unnel to lounge-',
            7:'-[S]tay, [L]eave-',
            8:'-[S]tay, [L]eave-'
        }
        z = switcher2.get(j)
        print(z)
        next = input()

        if next == 'L':
            on = 0
            out = [i[0], i[1], 9]
            return out
        elif next == 'T':
            on = 0
            switcher3={
            22:[18, 18, 4],
            2:[19, 4, 6],
            4:[3, 5, 22],
            6:[5, 18, 2],
            }
            out = switcher3.get(j)
            return out
        else:
            pass

def moving(y,x):
    # add a dice rolling feature
    on = 1
    you_are_here = [y,x]
    print("you are here", you_are_here)
    while on == 1:
        walk = input()
        temp_x = x
        temp_y = y
        if walk == "w":
            y -= 1
        elif walk == "s":
            y += 1
        elif walk == "a":
            x -= 1
        elif walk == "d":
            x += 1
        else:
            print("To walk press w(^), s(v), a(<), or d(>)")

        if x<0 or x>23 or y<0 or y>23:
            print("There is a wall here. You may not move in this direction")
            x = temp_x
            y = temp_y
        else:
            if board[y][x] == 9:
                you_are_here = [y,x]
            elif board[y][x] == 0: #space is not walkable
                print("There is a wall here. You may not move in this direction")
                x = temp_x
                y = temp_y
            else: #space is a door
                you_are_here = [y,x]
                door = board[y][x]
                on = 0
            print("you are here", you_are_here)
    out = [y, x, door]
    return out

def main():
    #pick a character and set a starting point y=_ x=_
    player = input("-choose your character-\n")
    switcher_xy={
        "S":[0,16],
        "W":[23,14],
        "Pe":[18,0],
        "Pl":[5,0],
        "G":[23,9],
        "M":[7,23]
    }
    this = switcher_xy.get(player,"invalid input. an internal error has occurred. you must reset the game")
    y = this[0]
    x = this[1]

    on = 1
    print("To walk press w(^), s(v), a(<), or d(>)")
    temp = moving(y,x) # temp = [y, x, room]
    place = enter_room(temp) # place = [y, x, room]
    y = place[0]
    x = place[1]

    while on == 1:

        if place[2] == 9: #moving in the hall
            temp = moving(y,x)
            place = enter_room(temp)
            y = place[0]
            x = place[1]
        else: #secret tunnel to new room
            temp = place
            place = enter_room(temp)
            y = place[0]
            x = place[1]

        print("Are you ready to open the case files?")
        stuff = input("-[Y]es or [N]o-\n")

        if stuff == "Y":
            on = 0
            guess_final()
        else:
            pass

main()


#after implementing dice roll, keep a count of how many turns it took?
#option to move around inside the room, leave through different doors
